[tool.poetry]
name = "adit"
version = "0.29.0"
description = "ADIT (Automated DICOM Transfer) is a swiss army knife to exchange DICOM data between various systems by using a convenient web frontend."
authors = ["medihack <kai.schlamp@gmail.com>"]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
adrf = "^0.1.1"
aiofiles = "^23.1.0"
asyncinotify = "^4.0.1"
celery = "^5.2.7"
channels = "^4.0.0"
channels-redis = "^4.0.0"
cryptography = "^41.0.1"
daphne = "^4.0.0"
dicognito = "^0.15.0"
dicomweb-client = "^0.59.1"
Django = "^4.0.6"
django-crispy-forms = "^2.0"
django-environ = "^0.11.2"
django-extensions = "^3.1.5"
django-filter = "^23.1"
django-htmx = "^1.14.0"
django-loginas = "^0.3.9"
django-registration-redux = "^2.10"
django-revproxy = { git = "https://github.com/jazzband/django-revproxy.git" }
django-tables2 = "^2.3.3"
djangorestframework = "^3.13.1"
flower = "^2.0.0"
humanize = "^4.0.0"
Markdown = "^3.3.7"
openpyxl = "^3.1.2"
pandas = "^2.0.1"
pydicom = "^2.3.0"
pynetdicom = "^2.0.2"
python = "^3.11"
redis = "^4.6"
sherlock = "^0.4.1"
toml = "^0.10.2"
Twisted = { extras = ["tls", "http2"], version = "^22.2.0" }
wait-for-it = "^2.2.2"
watchfiles = "^0.20.0"
whitenoise = "^6.0.0"
crispy-bootstrap5 = "^0.7"
django-dbbackup = "^4.0.2"
janus = "^1.0.0"
psycopg = { extras = ["binary"], version = "^3.1.12" }

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
celery-types = "^0.20.0"
debugpy = "^1.6.2"
django-debug-permissions = "^1.0.0"
django-debug-toolbar = "^4.1.0"
django-test-migrations = "^1.3.0"
django-types = "^0.18.0"
djangorestframework-types = "^0.8.0"
djlint = "^1.19.16"
factory-boy = "^3.1.0"
Faker = "^19.3.0"
invoke = "^2.1.2"
ipykernel = "^6.17.1"
ipython = "^8.1.1"
nest-asyncio = "^1.5.6"
pyright = "^1.1.323"
pytest = "^7.1.2"
pytest-asyncio = "^0.21.0"
pytest-celery = "^0.0.0"
pytest-cov = "^4.0.0"
pytest-django = "^4.5.2"
pytest-mock = "^3.10.0"
pytest-only = "^2.0.0"
pytest-picked = "^0.5.0"
pytest-playwright = "^0.4.2"
pytest-timeout = "^2.1.0"
pytest-watch = "^4.2.0"
python-dotenv = "^1.0.0"
requests = "^2.27.1"
ruff = "^0.0.291"
time-machine = "^2.1.0"
django-browser-reload = "^1.11.0"
pywatchman = "^1.4.1"
vermin = "^1.5.2"

[tool.pyright]
ignore = ["**/migrations"]
typeCheckingMode = "basic"
reportUnnecessaryTypeIgnoreComment = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "adit.settings.development"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["adit"]
log_cli = 0
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
markers = ["integration: mark a test as an integration test."]
filterwarnings = [
    "ignore:.*Factory._after_postgeneration will stop saving the instance:DeprecationWarning",
    "ignore:SelectableGroups dict interface is deprecated:DeprecationWarning",
    "ignore:The USE_L10N setting is deprecated:django.utils.deprecation.RemovedInDjango50Warning",
    "ignore:'cgi' is deprecated:DeprecationWarning",
]
timeout = 60

[tool.coverage.run]
branch = true
source = ["adit"]

[tool.coverage.report]
skip_empty = true
show_missing = true

[tool.ruff]
exclude = ["migrations"]
line-length = 100
select = ["E", "F", "I", "DJ"]

[tool.black]
extend-exclude = "migrations"
line-length = 100

[tool.djlint]
profile = "django"
max_line_length = 120
ignore = "H021,T002"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
