version: "3.8"

x-app:
    &default-app
    build:
        context: ../..
        target: development
    depends_on:
        - syslog
        - postgres
        - rabbit
        - redis
        - orthanc1
        - orthanc2
    volumes:
        - ../..:/app
        - /mnt:/mnt
        - adit_data:/var/www/adit
        - vscode-server:/root/.vscode-server/extensions
        - vscode-server-insiders:/root/.vscode-server-insiders/extensions
    env_file:
        - ./.env
    environment:
        ENABLE_REMOTE_DEBUGGING: 0
        USE_DOCKER: 1
        DJANGO_SETTINGS_MODULE: "adit.settings.development"
        DATABASE_URL: "psql://postgres:postgres@postgres:5432/postgres"
        RABBITMQ_URL: "amqp://rabbit"
        REDIS_URL: "redis://redis:6379/0"
        DJANGO_STATIC_ROOT: "/var/www/adit/static/"
        RABBIT_MANAGEMENT_HOST: "rabbit"
        RABBIT_MANAGEMENT_PORT: "15672"
        FLOWER_HOST: "flower"
        FLOWER_PORT: "5555"
        SYSLOG_HOST: "syslog"
        SYSLOG_PORT: "514"
        ORTHANC1_HOST: "orthanc1"
        ORTHANC2_HOST: "orthanc2"

services:
    web:
        <<: *default-app
        ports:
            - "8000:8000"
            - "5678:5678"
        command: >
            bash -c "
              ./scripts/wait-for-it.sh postgres:5432 -t 30 &&
              python ./manage.py reset_orthancs &&
              python ./manage.py migrate &&
              python ./manage.py collectstatic --no-input &&
              python ./manage.py populate_dev_db &&
              python ./manage.py runserver 0.0.0.0:8000
            "

    worker_default:
        <<: *default-app
        command: python manage.py celery_worker -Q default_queue

    worker_dicom_task:
        <<: *default-app
        command: python manage.py celery_worker -Q dicom_task_queue

    celery_beat:
        <<: *default-app
        command: python manage.py celery_beat

    receiver:
        <<: *default-app
        ports:
            - "11122:11112"
        command: python manage.py receiver

    # TODO: Disable Flower 1.0.0 for now as it is not fully compatible with Celery 5
    # flower:
    #     <<: *default-app
    #     expose:
    #         - "5555"
    #     command: celery -A adit flower --url_prefix=flower

    postgres:
        image: postgres:13.1
        expose:
            - "5432"
        environment:
            POSTGRES_PASSWORD: "postgres"
        volumes:
            - postgres_data:/var/lib/postgresql/data

    # RabbitMQ authentication can't be disabled. So when we try to log into
    # the management console we have to use "guest" as username and password.
    # The real authentication happens by ADIT itself, because the management
    # console is behind a ProxyView.
    rabbit:
        image: rabbitmq:3.8-management
        expose:
            - "5672"
            - "15672"
        volumes:
            - rabbit_data:/var/lib/rabbitmq

    redis:
        image: redis:6.0
        expose:
            - "6379"
        volumes:
            - redis_data:/data

    syslog:
        image: balabit/syslog-ng:3.30.1
        expose:
            - "514"
        volumes:
            - ../syslog/logrotate.conf:/etc/logrotate.conf
            - ../syslog/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf
            - syslog_data:/var/log

    orthanc1:
        image: jodogne/orthanc-plugins:1.8.1
        ports:
            - "6501:6501"
            - "7501:7501"

        volumes:
            - ./orthanc1/orthanc.json:/etc/orthanc/orthanc.json
            - orthanc1_data:/var/lib/orthanc/db

    orthanc2:
        image: jodogne/orthanc-plugins:1.8.1
        ports:
            - "6502:6502"
            - "7502:7502"
        volumes:
            - ./orthanc2/orthanc.json:/etc/orthanc/orthanc.json
            - orthanc2_data:/var/lib/orthanc/db

volumes:
    adit_data:
    vscode-server:
    vscode-server-insiders:
    postgres_data:
    rabbit_data:
    redis_data:
    flower_data:
    syslog_data:
    orthanc1_data:
    orthanc2_data:
