x-app: &default-app
  restart: always
  image: adit_prod:latest
  env_file:
    - ../.env.prod
  environment:
    ENABLE_REMOTE_DEBUGGING: 0
    DJANGO_SETTINGS_MODULE: "adit.settings.production"
    SSL_CERT_FILE: "/var/www/adit/ssl/cert.pem"
    SSL_KEY_FILE: "/var/www/adit/ssl/key.pem"

services:
  web:
    <<: *default-app
    build:
      target: production
    ports:
      - "${ADIT_HTTP_PORT:-80}:80"
      - "${ADIT_HTTPS_PORT:-443}:443"
    command: >
      bash -c "
        wait-for-it -s postgres.local:5432 -t 60 && 
        ./manage.py migrate &&
        ./manage.py collectstatic --no-input &&
        ./manage.py create_admin &&
        ./manage.py generate_cert &&
        echo 'Starting web server ...'
        gunicorn -b 0.0.0.0:443 --keyfile=/var/www/adit/ssl/key.pem --certfile /var/www/adit/ssl/cert.pem -w 4 -k uvicorn.workers.UvicornWorker adit.asgi:application
      "
    deploy:
      replicas: 1

  postgres:
    restart: always
    env_file:
      - ../.env.prod
    deploy:
      replicas: 1

  dicom_worker:
    <<: *default-app
    command: >
      bash -c "
        wait-for-it -s web.local:443 -t 0 && 
        ./manage.py dicom_worker
      "
    deploy:
      replicas: 1

  celery_worker:
    <<: *default-app
    command: ./manage.py celery_worker -Q default_queue
    deploy:
      replicas: 1

  celery_beat:
    <<: *default-app
    command: ./manage.py celery_beat
    deploy:
      replicas: 1

  receiver:
    <<: *default-app
    ports:
      - "11112:11112"
    command: ./manage.py receiver
    deploy:
      replicas: 1

  flower:
    <<: *default-app
    deploy:
      replicas: 1

  redis:
    restart: always
    deploy:
      replicas: 1

  orthanc1:
    restart: always
    deploy:
      replicas: 1

  orthanc2:
    restart: always
    deploy:
      replicas: 1
